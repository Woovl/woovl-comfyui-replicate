{
    "url": "https://replicate.com/snowflake/snowflake-arctic-instruct",
    "owner": "snowflake",
    "name": "snowflake-arctic-instruct",
    "description": "An efficient, intelligent, and truly open-source language model",
    "visibility": "public",
    "github_url": "https://github.com/Snowflake-Labs/snowflake-arctic",
    "paper_url": null,
    "license_url": "https://www.apache.org/licenses/LICENSE-2.0",
    "run_count": 0,
    "cover_image_url": "https://tjzk.replicate.delivery/models_models_featured_image/793e32b4-913c-4036-a847-4afb38e42fc1/Snowflake_Arctic_Opengraph_120.png",
    "default_example": {
        "id": "3knp1rt7ksrhw0cf1s0vgxh2s0",
        "model": "replicate-internal/test-staging",
        "version": "2072330479447fbad9efb801ccf212f8f59e5660f620bff101c0dee1cc997fde",
        "status": "succeeded",
        "input": {
            "top_p": 0.9,
            "prompt": "Write fizz buzz in SQL",
            "temperature": 0.2,
            "max_new_tokens": 512,
            "min_new_tokens": 0,
            "stop_sequences": "<|im_end|>",
            "prompt_template": "<|im_start|>system\nYou're a helpful assistant<|im_end|>\n<|im_start|>user\n{prompt}<|im_end|>\n\n<|im_start|>assistant\n",
            "presence_penalty": 1.15,
            "frequency_penalty": 0.2
        },
        "output": [
            "Fiz",
            "z ",
            "Buzz is",
            " a common pr",
            "ogrammin",
            "g pro",
            "blem that",
            " involves",
            " printin",
            "g num",
            "b",
            "e",
            "rs ",
            "f",
            "r",
            "o",
            "m",
            " ",
            "1 to 100, ",
            "replac",
            "ing ",
            "mul",
            "t",
            "i",
            "ples ",
            "of",
            " ",
            "3 w",
            "it",
            "h \"Fiz",
            "z\", ",
            "mul",
            "t",
            "i",
            "ples ",
            "of",
            " ",
            "5 w",
            "it",
            "h \"B",
            "uzz\", ",
            "and ",
            "mul",
            "tiple",
            "s",
            " ",
            "of b",
            "o",
            "t",
            "h 3 a",
            "nd",
            " ",
            "5 w",
            "i",
            "th ",
            "\"F",
            "izzBu",
            "z",
            "z",
            "\". H",
            "ere'",
            "s ho",
            "w you ",
            "can s",
            "olve thi",
            "s p",
            "robl",
            "e",
            "m",
            " ",
            "in ",
            "SQL",
            ":",
            "\n",
            "\n``",
            "`sq",
            "l\nW",
            "IT",
            "H ",
            "RE",
            "CUR",
            "S",
            "IV",
            "E ",
            "fiz",
            "z_",
            "b",
            "uzz",
            " AS (\n ",
            " ",
            " ",
            " SE",
            "LECT",
            " ",
            "1 A",
            "S num\n",
            "    ",
            "U",
            "NIO",
            "N ALL\n ",
            "   S",
            "EL",
            "E",
            "C",
            "T num",
            " +",
            " 1 ",
            "F",
            "RO",
            "M ",
            "fizz_b",
            "uzz ",
            "WH",
            "E",
            "R",
            "E",
            " ",
            "n",
            "u",
            "m",
            " < 100",
            "\n",
            ")\nS",
            "ELECT",
            "\n",
            "    CAS",
            "E\n   ",
            "  ",
            "  ",
            " ",
            "WHE",
            "N",
            " ",
            "M",
            "O",
            "D(",
            "n",
            "u",
            "m, 3",
            ") ",
            "= ",
            "0",
            " AN",
            "D",
            " ",
            "M",
            "O",
            "D(",
            "n",
            "u",
            "m, 5)",
            " =",
            " ",
            "0 T",
            "H",
            "EN ",
            "'",
            "F",
            "izzBuzz",
            "'\n   ",
            "  ",
            "  ",
            " ",
            "WHE",
            "N",
            " ",
            "M",
            "O",
            "D(",
            "n",
            "u",
            "m, 3)",
            " =",
            " ",
            "0 T",
            "H",
            "E",
            "N 'Fizz",
            "'\n   ",
            "  ",
            "  ",
            " ",
            "WHE",
            "N",
            " ",
            "M",
            "O",
            "D(",
            "n",
            "u",
            "m, 5)",
            " =",
            " ",
            "0 T",
            "H",
            "E",
            "N 'Buzz",
            "'\n   ",
            "   ",
            "  ",
            "E",
            "LSE",
            " CA",
            "ST(nu",
            "m",
            " ",
            "AS ",
            "CHAR",
            ")\n ",
            "   END ",
            "A",
            "S re",
            "su",
            "lt\n",
            "F",
            "RO",
            "M ",
            "f",
            "i",
            "zz_",
            "buzz;\n```"
        ],
        "logs": "INFO 04-24 03:58:30 async_llm_engine.py:508] Received request 709f2034294045d7aacd6694b23a02aa: prompt: \"<|im_start|>system\\nYou're a helpful assistant<|im_end|>\\n<|im_start|>user\\nWrite fizz buzz in SQL<|im_end|>\\n\\n<|im_start|>assistant\\n\", sampling_params: SamplingParams(n=1, best_of=1, presence_penalty=1.15, frequency_penalty=0.2, repetition_penalty=1.0, temperature=0.6, top_p=0.9, top_k=50, min_p=0.0, seed=None, use_beam_search=False, length_penalty=1.0, early_stopping=False, stop=['<|im_end|>', '<|im_end|>'], stop_token_ids=[], include_stop_str_in_output=False, ignore_eos=False, max_tokens=512, min_tokens=0, logprobs=None, prompt_logprobs=None, skip_special_tokens=True, spaces_between_special_tokens=True, truncate_prompt_tokens=None), prompt_token_ids: None, lora_request: None.\r\n stdoutINFO 04-24 03:58:33 async_llm_engine.py:120] Finished request 709f2034294045d7aacd6694b23a02aa.\r\n stdoutTokens/second: 79.51895574949201\r\n stdout",
        "error": "",
        "metrics": {
            "predict_time": 3.0,
            "total_time": 2.698
        },
        "created_at": "2024-04-24T03:58:30.302000Z",
        "started_at": "2024-04-24T03:58:30Z",
        "completed_at": "2024-04-24T03:58:33Z",
        "urls": {
            "stream": "https://streaming-api.svc.us-chicago-1.o.replicate.net/v1/streams/axg26c7crqn2w723buhwjxxiswx7conlfwp64wgim4sxszp7rxeq",
            "get": "https://api.replicate.com/v1/predictions/3knp1rt7ksrhw0cf1s0vgxh2s0",
            "cancel": "https://api.replicate.com/v1/predictions/3knp1rt7ksrhw0cf1s0vgxh2s0/cancel"
        }
    },
    "latest_version": {
        "id": "081f548e9a59c93b8355abe28ca52680c8305bc8f4a186a3de62ea41b25db8dd",
        "created_at": "2024-04-24T02:04:53.961055+00:00",
        "cog_version": "v0.10.0-alpha3+dev",
        "openapi_schema": {
            "info": {
                "title": "Cog",
                "version": "0.1.0"
            },
            "paths": {
                "/": {
                    "get": {
                        "summary": "Root",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Root  Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "root__get"
                    }
                },
                "/shutdown": {
                    "post": {
                        "summary": "Start Shutdown",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Start Shutdown Shutdown Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "start_shutdown_shutdown_post"
                    }
                },
                "/predictions": {
                    "post": {
                        "summary": "Predict",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model",
                        "operationId": "predict_predictions_post",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "$ref": "#/components/schemas/PredictionRequest"
                                    }
                                }
                            }
                        }
                    }
                },
                "/health-check": {
                    "get": {
                        "summary": "Healthcheck",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Healthcheck Health Check Get"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            }
                        },
                        "operationId": "healthcheck_health_check_get"
                    }
                },
                "/predictions/{prediction_id}": {
                    "put": {
                        "summary": "Predict Idempotent",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/PredictionResponse"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            },
                            {
                                "in": "header",
                                "name": "prefer",
                                "schema": {
                                    "type": "string",
                                    "title": "Prefer"
                                },
                                "required": false
                            }
                        ],
                        "description": "Run a single prediction on the model (idempotent creation).",
                        "operationId": "predict_idempotent_predictions__prediction_id__put",
                        "requestBody": {
                            "content": {
                                "application/json": {
                                    "schema": {
                                        "allOf": [
                                            {
                                                "$ref": "#/components/schemas/PredictionRequest"
                                            }
                                        ],
                                        "title": "Prediction Request"
                                    }
                                }
                            },
                            "required": true
                        }
                    }
                },
                "/predictions/{prediction_id}/cancel": {
                    "post": {
                        "summary": "Cancel",
                        "responses": {
                            "200": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "title": "Response Cancel Predictions  Prediction Id  Cancel Post"
                                        }
                                    }
                                },
                                "description": "Successful Response"
                            },
                            "422": {
                                "content": {
                                    "application/json": {
                                        "schema": {
                                            "$ref": "#/components/schemas/HTTPValidationError"
                                        }
                                    }
                                },
                                "description": "Validation Error"
                            }
                        },
                        "parameters": [
                            {
                                "in": "path",
                                "name": "prediction_id",
                                "schema": {
                                    "type": "string",
                                    "title": "Prediction ID"
                                },
                                "required": true
                            }
                        ],
                        "description": "Cancel a running prediction",
                        "operationId": "cancel_predictions__prediction_id__cancel_post"
                    }
                }
            },
            "openapi": "3.0.2",
            "components": {
                "schemas": {
                    "Input": {
                        "type": "object",
                        "title": "Input",
                        "properties": {
                            "name": {
                                "type": "string",
                                "title": "Name",
                                "x-order": 0
                            },
                            "name_file": {
                                "type": "string",
                                "title": "Name File",
                                "format": "uri",
                                "x-order": 1
                            }
                        }
                    },
                    "Output": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "title": "Output",
                        "x-cog-array-type": "iterator"
                    },
                    "Status": {
                        "enum": [
                            "starting",
                            "processing",
                            "succeeded",
                            "canceled",
                            "failed"
                        ],
                        "type": "string",
                        "title": "Status",
                        "description": "An enumeration."
                    },
                    "WebhookEvent": {
                        "enum": [
                            "start",
                            "output",
                            "logs",
                            "completed"
                        ],
                        "type": "string",
                        "title": "WebhookEvent",
                        "description": "An enumeration."
                    },
                    "ValidationError": {
                        "type": "object",
                        "title": "ValidationError",
                        "required": [
                            "loc",
                            "msg",
                            "type"
                        ],
                        "properties": {
                            "loc": {
                                "type": "array",
                                "items": {
                                    "anyOf": [
                                        {
                                            "type": "string"
                                        },
                                        {
                                            "type": "integer"
                                        }
                                    ]
                                },
                                "title": "Location"
                            },
                            "msg": {
                                "type": "string",
                                "title": "Message"
                            },
                            "type": {
                                "type": "string",
                                "title": "Error Type"
                            }
                        }
                    },
                    "PredictionRequest": {
                        "type": "object",
                        "title": "PredictionRequest",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "webhook": {
                                "type": "string",
                                "title": "Webhook",
                                "format": "uri",
                                "maxLength": 65536,
                                "minLength": 1
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "output_file_prefix": {
                                "type": "string",
                                "title": "Output File Prefix"
                            },
                            "webhook_events_filter": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/WebhookEvent"
                                },
                                "default": [
                                    "start",
                                    "output",
                                    "logs",
                                    "completed"
                                ]
                            }
                        }
                    },
                    "PredictionResponse": {
                        "type": "object",
                        "title": "PredictionResponse",
                        "properties": {
                            "id": {
                                "type": "string",
                                "title": "Id"
                            },
                            "logs": {
                                "type": "string",
                                "title": "Logs",
                                "default": ""
                            },
                            "error": {
                                "type": "string",
                                "title": "Error"
                            },
                            "input": {
                                "$ref": "#/components/schemas/Input"
                            },
                            "output": {
                                "$ref": "#/components/schemas/Output"
                            },
                            "status": {
                                "$ref": "#/components/schemas/Status"
                            },
                            "metrics": {
                                "type": "object",
                                "title": "Metrics"
                            },
                            "version": {
                                "type": "string",
                                "title": "Version"
                            },
                            "created_at": {
                                "type": "string",
                                "title": "Created At",
                                "format": "date-time"
                            },
                            "started_at": {
                                "type": "string",
                                "title": "Started At",
                                "format": "date-time"
                            },
                            "completed_at": {
                                "type": "string",
                                "title": "Completed At",
                                "format": "date-time"
                            }
                        }
                    },
                    "HTTPValidationError": {
                        "type": "object",
                        "title": "HTTPValidationError",
                        "properties": {
                            "detail": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ValidationError"
                                },
                                "title": "Detail"
                            }
                        }
                    }
                }
            }
        }
    }
}